# config/database.py
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker, Session
from sqlalchemy.pool import QueuePool
import os
from typing import Generator

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î
DATABASE_URL = os.getenv('DATABASE_URL', 'sqlite:///sto_database.db')

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–≤–∏–∂–∫–∞ –ë–î —Å –ø—É–ª–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
engine = create_engine(
    DATABASE_URL,
    pool_pre_ping=True,  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    pool_size=5,         # –†–∞–∑–º–µ—Ä –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    max_overflow=10,     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    echo=False           # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–æ–≤ (True –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
)

# –§–∞–±—Ä–∏–∫–∞ —Å–µ—Å—Å–∏–π
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)


def get_db() -> Generator[Session, None, None]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –ë–î"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


def migrate_service_catalog_if_needed():
    """–ú–∏–≥—Ä–∞—Ü–∏—è ServiceCatalog –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ default_price
        result = db.execute(text("PRAGMA table_info(services_catalog)"))
        columns = [row[1] for row in result.fetchall()]
        
        if 'default_price' not in columns:
            print("üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏—è ServiceCatalog...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏
            db.execute(text("ALTER TABLE services_catalog ADD COLUMN default_price REAL"))
            db.execute(text("ALTER TABLE services_catalog ADD COLUMN vat_rate REAL DEFAULT 20.0"))
            db.execute(text("ALTER TABLE services_catalog ADD COLUMN duration_hours REAL DEFAULT 1.0"))
            db.execute(text("ALTER TABLE services_catalog ADD COLUMN description TEXT"))
            
            # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ price –≤ default_price
            db.execute(text("UPDATE services_catalog SET default_price = price WHERE default_price IS NULL"))
            
            db.commit()
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è ServiceCatalog –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        db.rollback()
        print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {e}")
    finally:
        db.close()


def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    from shared_models.base import Base
    from shared_models.common_models import Client, Car, Employee
    from sto_app.models_sto import Order, OrderService, OrderPart, ServiceCatalog, CarBrand
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    Base.metadata.create_all(bind=engine)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    migrate_service_catalog_if_needed()
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        if db.query(CarBrand).count() == 0:
            # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
            car_brands_data = [
                ('Toyota', 'Camry,Corolla,RAV4,Land Cruiser,Highlander,Prius,Yaris,Avalon'),
                ('Honda', 'Civic,Accord,CR-V,Pilot,Fit,HR-V,Odyssey,Ridgeline'),
                ('Volkswagen', 'Golf,Passat,Tiguan,Touareg,Polo,Jetta,Arteon,Atlas'),
                ('BMW', '3 Series,5 Series,X3,X5,X1,7 Series,X7,M3,M5'),
                ('Mercedes-Benz', 'C-Class,E-Class,GLC,GLE,A-Class,S-Class,GLA,GLB'),
                ('Audi', 'A4,A6,Q5,Q7,A3,Q3,A8,Q8,e-tron'),
                ('Mazda', 'CX-5,Mazda3,CX-9,Mazda6,MX-5,CX-30,CX-50'),
                ('Nissan', 'Rogue,Altima,Sentra,Murano,Pathfinder,Maxima,Frontier,Titan'),
                ('Hyundai', 'Elantra,Sonata,Tucson,Santa Fe,Kona,Palisade,Venue,Ioniq'),
                ('Kia', 'Optima,Sportage,Sorento,Forte,Soul,Telluride,Carnival,Stinger'),
                ('Ford', 'F-150,Escape,Explorer,Mustang,Edge,Fusion,Bronco,Ranger'),
                ('Chevrolet', 'Silverado,Equinox,Tahoe,Malibu,Traverse,Camaro,Blazer,Colorado'),
                ('Skoda', 'Octavia,Superb,Kodiaq,Karoq,Fabia,Scala,Kamiq,Enyaq'),
                ('Renault', 'Duster,Logan,Sandero,Captur,Megane,Kadjar,Arkana,Koleos'),
                ('Peugeot', '208,308,3008,5008,508,2008,408,Rifter'),
                ('Mitsubishi', 'Outlander,ASX,Pajero,Eclipse Cross,Lancer,Mirage,L200'),
                ('Subaru', 'Outback,Forester,Impreza,XV,Legacy,WRX,Ascent,BRZ'),
                ('Lexus', 'RX,NX,ES,GX,IS,LX,UX,LS'),
                ('Infiniti', 'QX50,QX60,Q50,QX80,QX30,Q60,QX55'),
                ('Volvo', 'XC60,XC90,S60,V60,XC40,S90,V90,C40')
            ]
            
            for brand, models in car_brands_data:
                car_brand = CarBrand(brand=brand, models=models)
                db.add(car_brand)
            
            db.commit()
        
        if db.query(ServiceCatalog).count() == 0:
            # –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —É—Å–ª—É–≥
            services = [
                ('–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è', '–ó–∞–º—ñ–Ω–∞ –º–∞—Å–ª–∞ –¥–≤–∏–≥—É–Ω–∞', 500, '–î–≤–∏–≥–∞—Ç–µ–ª—å', '–º–∞—Å–ª–æ,oil,–º–æ—Ç–æ—Ä', '–ó–∞–º–µ–Ω–∞ –º–æ—Ç–æ—Ä–Ω–æ–≥–æ –º–∞—Å–ª–∞ –∏ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞'),
                ('–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞', '–ó–∞–º—ñ–Ω–∞ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä–∞', 200, '–î–≤–∏–≥–∞—Ç–µ–ª—å', '—Ñ–∏–ª—å—Ç—Ä,filter', '–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è'),
                ('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è', '–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥—É–Ω–∞', 400, '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–ø—Ä–æ–≤–µ—Ä–∫–∞,—Ç–µ—Å—Ç,scan', '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è'),
                ('–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫', '–ó–∞–º—ñ–Ω–∞ –≥–∞–ª—å–º—ñ–≤–Ω–∏—Ö –∫–æ–ª–æ–¥–æ–∫', 600, '–¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', '–∫–æ–ª–æ–¥–∫–∏,—Ç–æ—Ä–º–æ–∑–∞,brake', '–ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏—Ö –∏–ª–∏ –∑–∞–¥–Ω–∏—Ö —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫'),
                ('–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤', '–ó–∞–º—ñ–Ω–∞ –≥–∞–ª—å–º—ñ–≤–Ω–∏—Ö –¥–∏—Å–∫—ñ–≤', 800, '–¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', '–¥–∏—Å–∫–∏,—Ç–æ—Ä–º–æ–∑–∞,brake', '–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤'),
                ('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–≤–µ—Å–∫–∏', '–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—ñ–¥–≤—ñ—Å–∫–∏', 300, '–ü–æ–¥–≤–µ—Å–∫–∞', '—Ö–æ–¥–æ–≤–∞—è,suspension', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–≤–µ—Å–∫–∏'),
                ('–ó–∞–º–µ–Ω–∞ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–æ–≤', '–ó–∞–º—ñ–Ω–∞ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ñ–≤', 1200, '–ü–æ–¥–≤–µ—Å–∫–∞', '—Å—Ç–æ–π–∫–∏,shock', '–ó–∞–º–µ–Ω–∞ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–æ–≤ –ø–µ—Ä–µ–¥–Ω–∏—Ö –∏–ª–∏ –∑–∞–¥–Ω–∏—Ö'),
                ('–†–∞–∑–≤–∞–ª-—Å—Ö–æ–∂–¥–µ–Ω–∏–µ', '–†–æ–∑–≤–∞–ª-—Å—Ö–æ–¥–∂–µ–Ω–Ω—è', 400, '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '—É–≥–ª—ã,alignment', '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —É–≥–ª–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–ª–µ—Å'),
                ('–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–æ–ª–µ—Å', '–ë–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è –∫–æ–ª—ñ—Å', 300, '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '–∫–æ–ª–µ—Å–∞,—à–∏–Ω—ã,balance', '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–æ–ª–µ—Å –Ω–∞ —Å—Ç–µ–Ω–¥–µ'),
                ('–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', 250, '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '—Ä–µ–∑–∏–Ω–∞,–ø–æ–∫—Ä—ã—à–∫–∏,tire', '–°–Ω—è—Ç–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏–Ω'),
                ('–ó–∞–º–µ–Ω–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞', '–ó–∞–º—ñ–Ω–∞ –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä–∞', 150, '–î–≤–∏–≥–∞—Ç–µ–ª—å', '–≤–æ–∑–¥—É—Ö,air', '–ó–∞–º–µ–Ω–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è'),
                ('–ó–∞–º–µ–Ω–∞ —Å–≤–µ—á–µ–π –∑–∞–∂–∏–≥–∞–Ω–∏—è', '–ó–∞–º—ñ–Ω–∞ —Å–≤—ñ—á–æ–∫ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è', 300, '–î–≤–∏–≥–∞—Ç–µ–ª—å', '—Å–≤–µ—á–∏,spark', '–ó–∞–º–µ–Ω–∞ —Å–≤–µ—á–µ–π –∑–∞–∂–∏–≥–∞–Ω–∏—è'),
                ('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏', '–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –µ–ª–µ–∫—Ç—Ä–∏–∫–∏', 350, '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞', '—ç–ª–µ–∫—Ç—Ä–æ,–ø—Ä–æ–≤–æ–¥–∞,electric', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'),
                ('–ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞', '–ó–∞–º—ñ–Ω–∞ –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞', 200, '–≠–ª–µ–∫—Ç—Ä–∏–∫–∞', '–±–∞—Ç–∞—Ä–µ—è,–ê–ö–ë,battery', '–ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω–æ–π –±–∞—Ç–∞—Ä–µ–∏'),
                ('–ö—É–∑–æ–≤–Ω–æ–π —Ä–µ–º–æ–Ω—Ç', '–ö—É–∑–æ–≤–Ω–∏–π —Ä–µ–º–æ–Ω—Ç', 1500, '–ö—É–∑–æ–≤–Ω–æ–π —Ä–µ–º–æ–Ω—Ç', '–∫—É–∑–æ–≤,–≤–º—è—Ç–∏–Ω–∞,–ø–æ–∫—Ä–∞—Å–∫–∞', '–†–µ–º–æ–Ω—Ç –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∫—É–∑–æ–≤–∞'),
            ]
            
            for name, name_ua, price, category, synonyms, description in services:
                service = ServiceCatalog(
                    name=name,
                    name_ua=name_ua,
                    default_price=price,      # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ
                    description=description,   # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –æ–ø–∏—Å–∞–Ω–∏–µ
                    category=category,
                    synonyms=synonyms,
                    vat_rate=20.0,           # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ù–î–°
                    duration_hours=1.0,      # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                    is_active=1
                )
                db.add(service)
            
            db.commit()
            print("‚úÖ –ë–∞–∑–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥")
            
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        raise
    finally:
        db.close()