# sto_app/dialogs/calendar_dialog.py
from PySide6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QCalendarWidget,
                              QPushButton, QLabel, QListWidget, QListWidgetItem,
                              QGroupBox, QComboBox, QDateEdit, QTimeEdit,
                              QTextEdit, QFormLayout, QMessageBox, QSplitter,
                              QWidget, QFrame)
from PySide6.QtCore import Qt, QDate, QTime, QDateTime, Signal
from PySide6.QtGui import QFont, QTextCharFormat, QColor
from sqlalchemy.orm import Session
from datetime import datetime, timedelta

from sto_app.models_sto import Order, OrderStatus


class CalendarDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–∫–∞–∑–æ–≤"""
    
    # –°–∏–≥–Ω–∞–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–∞–∫–∞–∑–∞
    order_selected = Signal(object)
    
    def __init__(self, db_session: Session, parent=None):
        super().__init__(parent)
        self.db_session = db_session
        
        self.setWindowTitle('üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–∫–∞–∑–æ–≤')
        self.setMinimumSize(900, 700)
        self.resize(1100, 800)
        
        self.setup_ui()
        self.setup_connections()
        self.load_orders()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel('üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–∫–∞–∑–æ–≤')
        title_font = QFont()
        title_font.setPointSize(14)
        title_font.setBold(True)
        title_label.setFont(title_font)
        layout.addWidget(title_label)
        
        # –°–ø–ª–∏—Ç—Ç–µ—Ä –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
        splitter = QSplitter(Qt.Horizontal)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        calendar_panel = self.create_calendar_panel()
        splitter.addWidget(calendar_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –∑–∞–∫–∞–∑—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è
        orders_panel = self.create_orders_panel()
        splitter.addWidget(orders_panel)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏
        splitter.setSizes([400, 500])
        
        layout.addWidget(splitter)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        actions_layout = QHBoxLayout()
        
        self.new_order_btn = QPushButton('‚ûï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑')
        actions_layout.addWidget(self.new_order_btn)
        
        self.edit_order_btn = QPushButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
        self.edit_order_btn.setEnabled(False)
        actions_layout.addWidget(self.edit_order_btn)
        
        self.view_order_btn = QPushButton('üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä')
        self.view_order_btn.setEnabled(False)
        actions_layout.addWidget(self.view_order_btn)
        
        actions_layout.addStretch()
        
        self.refresh_btn = QPushButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å')
        actions_layout.addWidget(self.refresh_btn)
        
        self.close_btn = QPushButton('–ó–∞–∫—Ä—ã—Ç—å')
        actions_layout.addWidget(self.close_btn)
        
        layout.addLayout(actions_layout)
        
    def create_calendar_panel(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
        panel = QGroupBox('–ö–∞–ª–µ–Ω–¥–∞—Ä—å')
        layout = QVBoxLayout(panel)
        
        # –§–∏–ª—å—Ç—Ä—ã
        filters_layout = QFormLayout()
        
        self.status_filter = QComboBox()
        self.status_filter.addItem('–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã', None)
        for status in OrderStatus:
            self.status_filter.addItem(status.value, status)
        filters_layout.addRow('–°—Ç–∞—Ç—É—Å:', self.status_filter)
        
        self.period_filter = QComboBox()
        self.period_filter.addItems([
            '–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü',
            '–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü',
            '–í–µ—Å—å –≥–æ–¥',
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥'
        ])
        filters_layout.addRow('–ü–µ—Ä–∏–æ–¥:', self.period_filter)
        
        layout.addLayout(filters_layout)
        
        # –ö–∞–ª–µ–Ω–¥–∞—Ä—å
        self.calendar = QCalendarWidget()
        self.calendar.setGridVisible(True)
        self.calendar.setMinimumDate(QDate(2020, 1, 1))
        self.calendar.setMaximumDate(QDate(2030, 12, 31))
        self.calendar.setSelectedDate(QDate.currentDate())
        
        layout.addWidget(self.calendar)
        
        # –õ–µ–≥–µ–Ω–¥–∞
        legend_layout = QHBoxLayout()
        
        # –°—Ç–∞—Ç—É—Å—ã —Å —Ü–≤–µ—Ç–∞–º–∏
        statuses_info = [
            ('–ß–µ—Ä–Ω–æ–≤–∏–∫', '#FFA726'),
            ('–í —Ä–∞–±–æ—Ç–µ', '#42A5F5'),
            ('–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É', '#FF7043'),
            ('–ó–∞–≤–µ—Ä—à–µ–Ω', '#66BB6A'),
            ('–û—Ç–º–µ–Ω–µ–Ω', '#EF5350')
        ]
        
        for status, color in statuses_info:
            legend_item = QLabel(f'‚¨§ {status}')
            legend_item.setStyleSheet(f'color: {color}; font-weight: bold;')
            legend_layout.addWidget(legend_item)
            
        legend_layout.addStretch()
        layout.addLayout(legend_layout)
        
        return panel
        
    def create_orders_panel(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∑–∞–∫–∞–∑–æ–≤"""
        panel = QGroupBox('–ó–∞–∫–∞–∑—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è')
        layout = QVBoxLayout(panel)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –¥–Ω–µ
        self.selected_date_label = QLabel()
        self.update_selected_date_label()
        date_font = QFont()
        date_font.setBold(True)
        self.selected_date_label.setFont(date_font)
        layout.addWidget(self.selected_date_label)
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
        self.orders_list = QListWidget()
        self.orders_list.setAlternatingRowColors(True)
        layout.addWidget(self.orders_list)
        
        # –î–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        details_group = QGroupBox('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞')
        details_layout = QVBoxLayout(details_group)
        
        self.order_details = QTextEdit()
        self.order_details.setReadOnly(True)
        self.order_details.setMaximumHeight(150)
        self.order_details.setPlaceholderText('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π')
        details_layout.addWidget(self.order_details)
        
        layout.addWidget(details_group)
        
        return panel
        
    def setup_connections(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–æ–≤"""
        self.calendar.selectionChanged.connect(self.on_date_selected)
        self.calendar.clicked.connect(self.on_date_clicked)
        
        self.status_filter.currentTextChanged.connect(self.on_filter_changed)
        self.period_filter.currentTextChanged.connect(self.on_period_changed)
        
        self.orders_list.itemSelectionChanged.connect(self.on_order_selected)
        self.orders_list.itemDoubleClicked.connect(self.view_order)
        
        self.new_order_btn.clicked.connect(self.new_order)
        self.edit_order_btn.clicked.connect(self.edit_order)
        self.view_order_btn.clicked.connect(self.view_order)
        self.refresh_btn.clicked.connect(self.load_orders)
        self.close_btn.clicked.connect(self.accept)
        
    def load_orders(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
            orders = self.db_session.query(Order).all()
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
            self.orders_by_date = {}
            
            for order in orders:
                if order.date_received:
                    date_key = order.date_received.date()
                    if date_key not in self.orders_by_date:
                        self.orders_by_date[date_key] = []
                    self.orders_by_date[date_key].append(order)
                    
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            self.update_calendar_highlighting()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
            self.update_orders_list()
            
        except Exception as e:
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤: {e}')
            
    def update_calendar_highlighting(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
        default_format = QTextCharFormat()
        self.calendar.setDateTextFormat(QDate(), default_format)
        
        # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –¥–∞—Ç—ã —Å –∑–∞–∫–∞–∑–∞–º–∏
        for date, orders in self.orders_by_date.items():
            qdate = QDate(date.year, date.month, date.day)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∑–∞–∫–∞–∑–æ–≤
            format = QTextCharFormat()
            format.setBackground(QColor(self.get_date_color(orders)))
            format.setForeground(QColor('#ffffff'))
            format.setFontWeight(75)  # Bold
            
            self.calendar.setDateTextFormat(qdate, format)
            
    def get_date_color(self, orders):
        """–ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è –¥–∞—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤"""
        if not orders:
            return '#ffffff'
            
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å—Ç–∞—Ç—É—Å–æ–≤
        status_colors = {
            OrderStatus.CANCELLED: '#EF5350',     # –ö—Ä–∞—Å–Ω—ã–π - –æ—Ç–º–µ–Ω–µ–Ω
            OrderStatus.WAITING_PAYMENT: '#FF7043', # –û—Ä–∞–Ω–∂–µ–≤—ã–π - –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É
            OrderStatus.IN_WORK: '#42A5F5',       # –°–∏–Ω–∏–π - –≤ —Ä–∞–±–æ—Ç–µ
            OrderStatus.DRAFT: '#FFA726',         # –û—Ä–∞–Ω–∂–µ–≤—ã–π - —á–µ—Ä–Ω–æ–≤–∏–∫
            OrderStatus.COMPLETED: '#66BB6A'      # –ó–µ–ª–µ–Ω—ã–π - –∑–∞–≤–µ—Ä—à–µ–Ω
        }
        
        # –ù–∞—Ö–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        for status in [OrderStatus.CANCELLED, OrderStatus.WAITING_PAYMENT, 
                      OrderStatus.IN_WORK, OrderStatus.DRAFT, OrderStatus.COMPLETED]:
            if any(order.status == status for order in orders):
                return status_colors.get(status, '#42A5F5')
                
        return '#42A5F5'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∏–Ω–∏–π
        
    def on_date_selected(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
        self.update_selected_date_label()
        self.update_orders_list()
        
    def on_date_clicked(self, date):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –¥–∞—Ç–µ"""
        self.update_orders_list()
        
    def update_selected_date_label(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã"""
        selected_date = self.calendar.selectedDate()
        date_str = selected_date.toString('dd.MM.yyyy (dddd)')
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
        python_date = selected_date.toPython()
        orders_count = len(self.orders_by_date.get(python_date, []))
        
        self.selected_date_label.setText(f'üìÖ {date_str} | –ó–∞–∫–∞–∑–æ–≤: {orders_count}')
        
    def update_orders_list(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤"""
        self.orders_list.clear()
        self.order_details.clear()
        
        selected_date = self.calendar.selectedDate().toPython()
        orders = self.orders_by_date.get(selected_date, [])
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
        status_filter = self.status_filter.currentData()
        if status_filter:
            orders = [order for order in orders if order.status == status_filter]
            
        if not orders:
            item = QListWidgetItem('–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É')
            item.setFlags(Qt.NoItemFlags)
            self.orders_list.addItem(item)
            return
            
        for order in orders:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞
            client_name = order.client.name if order.client else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç'
            car_info = f"{order.car.brand} {order.car.model}" if order.car else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å'
            status_text = order.status.value if order.status else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'
            
            item_text = f"‚Ññ {order.order_number} | {client_name} | {car_info} | {status_text}"
            
            item = QListWidgetItem(item_text)
            item.setData(Qt.UserRole, order)
            
            # –¶–≤–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å—É
            if order.status == OrderStatus.COMPLETED:
                item.setBackground(QColor('#E8F5E8'))
            elif order.status == OrderStatus.IN_WORK:
                item.setBackground(QColor('#E3F2FD'))
            elif order.status == OrderStatus.WAITING_PAYMENT:
                item.setBackground(QColor('#FFF3E0'))
            elif order.status == OrderStatus.CANCELLED:
                item.setBackground(QColor('#FFEBEE'))
            elif order.status == OrderStatus.DRAFT:
                item.setBackground(QColor('#FFF8E1'))
                
            self.orders_list.addItem(item)
            
    def on_filter_changed(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞"""
        self.update_orders_list()
        
    def on_period_changed(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞"""
        period = self.period_filter.currentText()
        today = QDate.currentDate()
        
        if period == '–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü':
            self.calendar.setSelectedDate(today)
        elif period == '–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü':
            next_month = today.addMonths(1)
            self.calendar.setSelectedDate(next_month)
        elif period == '–í–µ—Å—å –≥–æ–¥':
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞—á–∞–ª—É –≥–æ–¥–∞
            year_start = QDate(today.year(), 1, 1)
            self.calendar.setSelectedDate(year_start)
            
    def on_order_selected(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∑–∞–∫–∞–∑–∞"""
        selected_items = self.orders_list.selectedItems()
        has_selection = bool(selected_items)
        
        self.edit_order_btn.setEnabled(has_selection)
        self.view_order_btn.setEnabled(has_selection)
        
        if selected_items:
            order = selected_items[0].data(Qt.UserRole)
            if order:
                self.show_order_details(order)
        else:
            self.order_details.clear()
            
    def show_order_details(self, order):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞"""
        details = f"""
<h3>üìã –ó–∞–∫–∞–∑ ‚Ññ {order.order_number}</h3>

<p><b>üë§ –ö–ª–∏–µ–Ω—Ç:</b> {order.client.name if order.client else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}</p>
<p><b>üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å:</b> {order.car.brand} {order.car.model} ({order.car.year or ''}) –µ—Å–ª–∏ order.car else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}</p>
<p><b>üìÖ –î–∞—Ç–∞ –ø—Ä–∏–µ–º–∞:</b> {order.date_received.strftime('%d.%m.%Y %H:%M') if order.date_received else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
<p><b>üìÖ –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏:</b> {order.date_delivery.strftime('%d.%m.%Y %H:%M') if order.date_delivery else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
<p><b>üìä –°—Ç–∞—Ç—É—Å:</b> {order.status.value if order.status else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}</p>
<p><b>üí∞ –°—É–º–º–∞:</b> {order.total_amount or 0:.2f} ‚Ç¥</p>

{f'<p><b>üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b> {order.notes}</p>' if order.notes else ''}
        """
        
        self.order_details.setHtml(details)
        
    def new_order(self):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"""
        # –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
        selected_date = self.calendar.selectedDate().toPython()
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–æ—Ä–º–æ–π –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
        QMessageBox.information(
            self, 
            '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑', 
            f'–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–∞ {selected_date.strftime("%d.%m.%Y")}\n'
            '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–æ—Ä–º–æ–π –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞'
        )
        
    def edit_order(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑"""
        selected_items = self.orders_list.selectedItems()
        if selected_items:
            order = selected_items[0].data(Qt.UserRole)
            if order:
                self.order_selected.emit(order)
                self.accept()
                
    def view_order(self):
        """–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞"""
        selected_items = self.orders_list.selectedItems()
        if selected_items:
            order = selected_items[0].data(Qt.UserRole)
            if order:
                # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞
                QMessageBox.information(
                    self,
                    '–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞',
                    f'–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞ ‚Ññ {order.order_number}\n'
                    '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏'
                )