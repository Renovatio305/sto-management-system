# –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–õ–Ø new_order_view.py
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª–µ sto_app/views/new_order_view.py

# 1. –ó–ê–ú–ï–ù–ò–¢–¨ –º–µ—Ç–æ–¥ add_service() (—Å—Ç—Ä–æ–∫–∞ 521):
def add_service(self):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥"""
    if not self.current_order:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ order_id
        reply = QMessageBox.question(
            self, '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞',
            '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?',
            QMessageBox.Yes | QMessageBox.No
        )
        if reply == QMessageBox.Yes:
            if not self.save_draft():
                return
        else:
            return

    dialog = ServiceDialog(self, order_id=self.current_order.id)
    dialog.service_cost_changed.connect(self.calculate_totals)
    
    if dialog.exec() == QDialog.DialogCode.Accepted:
        order_service = dialog.get_order_service()
        if order_service:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —É—Å–ª—É–≥
            self.refresh_services_table()
            self.calculate_totals()
            self.mark_unsaved_changes()

# 2. –ó–ê–ú–ï–ù–ò–¢–¨ –º–µ—Ç–æ–¥ add_part() (—Å—Ç—Ä–æ–∫–∞ 548):
def add_part(self):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥"""
    if not self.current_order:
        reply = QMessageBox.question(
            self, '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞',
            '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?',
            QMessageBox.Yes | QMessageBox.No
        )
        if reply == QMessageBox.Yes:
            if not self.save_draft():
                return
        else:
            return

    dialog = PartDialog(self, order_id=self.current_order.id)
    dialog.part_cost_changed.connect(self.calculate_totals)
    
    if dialog.exec() == QDialog.DialogCode.Accepted:
        order_part = dialog.get_order_part()
        if order_part:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –∑–∞–ø—á–∞—Å—Ç–µ–π
            self.refresh_parts_table()
            self.calculate_totals()
            self.mark_unsaved_changes()

# 3. –£–î–ê–õ–ò–¢–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –º–µ—Ç–æ–¥ add_service_from_search() (—Å—Ç—Ä–æ–∫–∞ 502)
# 4. –£–î–ê–õ–ò–¢–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –º–µ—Ç–æ–¥ add_part_from_search() (—Å—Ç—Ä–æ–∫–∞ 537)

# 5. –î–û–ë–ê–í–ò–¢–¨ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –≤ –∫–æ–Ω–µ—Ü –∫–ª–∞—Å—Å–∞:

def refresh_services_table(self):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ª—É–≥ –∏–∑ –ë–î"""
    if not self.current_order or not self.current_order.id:
        return
        
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏ –∏–∑ –ë–î
        services = self.db_session.query(OrderService).filter(
            OrderService.order_id == self.current_order.id
        ).all()
        
        # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        self.services_table.setRowCount(0)
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        for service in services:
            self.add_service_row_from_db(service)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —É—Å–ª—É–≥: {e}")

def refresh_parts_table(self):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–ø—á–∞—Å—Ç–µ–π –∏–∑ –ë–î"""
    if not self.current_order or not self.current_order.id:
        return
        
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –ë–î
        parts = self.db_session.query(OrderPart).filter(
            OrderPart.order_id == self.current_order.id
        ).all()
        
        # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        self.parts_table.setRowCount(0)
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        for part in parts:
            self.add_part_row_from_db(part)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∑–∞–ø—á–∞—Å—Ç–µ–π: {e}")

def add_service_row_from_db(self, service):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —É—Å–ª—É–≥–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ë–î"""
    row = self.services_table.rowCount()
    self.services_table.insertRow(row)
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ OrderService
    self.services_table.setItem(row, 0, QTableWidgetItem(service.service_catalog.name if service.service_catalog else "–£—Å–ª—É–≥–∞"))
    
    price_item = QTableWidgetItem(f'{float(service.price):.2f}')
    price_item.setTextAlignment(Qt.AlignRight)
    self.services_table.setItem(row, 1, price_item)
    
    # –¶–µ–Ω–∞ —Å –ù–î–° (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ)
    if hasattr(service, 'price_with_vat') and service.price_with_vat:
        vat_price = float(service.price_with_vat)
    else:
        vat_price = float(service.price) * 1.2
        
    vat_item = QTableWidgetItem(f'{vat_price:.2f}')
    vat_item.setTextAlignment(Qt.AlignRight)
    self.services_table.setItem(row, 2, vat_item)
    
    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    delete_btn = QPushButton('üóëÔ∏è')
    delete_btn.setMaximumWidth(30)
    delete_btn.clicked.connect(lambda: self.remove_service_from_db(service.id, row))
    self.services_table.setCellWidget(row, 3, delete_btn)

def add_part_row_from_db(self, part):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ë–î"""
    row = self.parts_table.rowCount()
    self.parts_table.insertRow(row)
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ OrderPart
    self.parts_table.setItem(row, 0, QTableWidgetItem(part.part_number or ""))
    self.parts_table.setItem(row, 1, QTableWidgetItem(part.name))
    
    qty_item = QTableWidgetItem(str(part.quantity))
    qty_item.setTextAlignment(Qt.AlignCenter)
    self.parts_table.setItem(row, 2, qty_item)
    
    price_item = QTableWidgetItem(f'{float(part.unit_price):.2f}')
    price_item.setTextAlignment(Qt.AlignRight)
    self.parts_table.setItem(row, 3, price_item)
    
    total = float(part.unit_price) * part.quantity
    total_item = QTableWidgetItem(f'{total:.2f}')
    total_item.setTextAlignment(Qt.AlignRight)
    self.parts_table.setItem(row, 4, total_item)
    
    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    delete_btn = QPushButton('üóëÔ∏è')
    delete_btn.setMaximumWidth(30)
    delete_btn.clicked.connect(lambda: self.remove_part_from_db(part.id, row))
    self.parts_table.setCellWidget(row, 5, delete_btn)

def remove_service_from_db(self, service_id, row):
    """–£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ –∏–∑ –ë–î"""
    reply = QMessageBox.question(
        self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
        '–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É?',
        QMessageBox.Yes | QMessageBox.No
    )
    
    if reply == QMessageBox.Yes:
        try:
            # –£–¥–∞–ª—è–µ–º –∏–∑ –ë–î
            service = self.db_session.get(OrderService, service_id)
            if service:
                self.db_session.delete(service)
                self.db_session.commit()
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            self.services_table.removeRow(row)
            self.calculate_totals()
            self.mark_unsaved_changes()
            
        except Exception as e:
            self.db_session.rollback()
            logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏: {e}")
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É: {e}')

def remove_part_from_db(self, part_id, row):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –ë–î"""
    reply = QMessageBox.question(
        self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
        '–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∑–∞–ø—á–∞—Å—Ç—å?',
        QMessageBox.Yes | QMessageBox.No
    )
    
    if reply == QMessageBox.Yes:
        try:
            # –£–¥–∞–ª—è–µ–º –∏–∑ –ë–î
            part = self.db_session.get(OrderPart, part_id)
            if part:
                self.db_session.delete(part)
                self.db_session.commit()
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            self.parts_table.removeRow(row)
            self.calculate_totals()
            self.mark_unsaved_changes()
            
        except Exception as e:
            self.db_session.rollback()
            logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏: {e}")
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å: {e}')

# –î–û–ë–ê–í–ò–¢–¨ –≤ –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞:
from sto_app.models_sto import OrderService, OrderPart