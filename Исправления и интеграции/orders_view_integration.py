# –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø OrderDetailsDialog –í OrdersView
# –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª sto_app/views/orders_view.py

# 1. –î–û–ë–ê–í–ò–¢–¨ –≤ –∏–º–ø–æ—Ä—Ç—ã (–≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞):
from sto_app.dialogs import OrderDetailsDialog

# 2. –î–û–ë–ê–í–ò–¢–¨ –º–µ—Ç–æ–¥ –≤ –∫–ª–∞—Å—Å OrdersView:
def view_order_details(self):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    current_row = self.orders_table.currentRow()
    if current_row < 0:
        QMessageBox.information(self, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–∑ —Å–∫—Ä—ã—Ç–æ–π –∫–æ–ª–æ–Ω–∫–∏ –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∏
    order_id_item = self.orders_table.item(current_row, 0)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ ID –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ
    if not order_id_item:
        QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∑–∞–∫–∞–∑–∞")
        return
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∑–∞–∫–∞–∑–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö —è—á–µ–π–∫–∏)
        order_id = int(order_id_item.text()) if order_id_item.text().isdigit() else None
        if not order_id:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —è—á–µ–π–∫–∏
            order_id = order_id_item.data(Qt.UserRole)
        
        if not order_id:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∑–∞–∫–∞–∑–∞")
            return
            
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
        dialog = OrderDetailsDialog(self, order_id=order_id)
        dialog.exec()
        
    except (ValueError, TypeError) as e:
        QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–∫–∞–∑–∞: {e}")
    except Exception as e:
        QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: {e}")

# 3. –î–û–ë–ê–í–ò–¢–¨ –∫–Ω–æ–ø–∫—É –≤ UI (–º–µ—Ç–æ–¥ setup_ui –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π):
def add_details_button_to_ui(self):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    # –ù–∞–π—Ç–∏ layout —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–æ–±—ã—á–Ω–æ —ç—Ç–æ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
    # –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
    
    details_btn = QPushButton("üìã –î–µ—Ç–∞–ª–∏")
    details_btn.setToolTip("–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞")
    details_btn.clicked.connect(self.view_order_details)
    
    # –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –≤ layout –∫–Ω–æ–ø–æ–∫ (–Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –∫–æ–¥–µ OrdersView)
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å buttons_layout:
    # buttons_layout.addWidget(details_btn)
    
    return details_btn

# 4. –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –í–ê–†–ò–ê–ù–¢ - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é:
def add_to_context_menu(self):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤"""
    # –ï—Å–ª–∏ –≤ OrdersView –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
    
    details_action = QAction("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π", self)
    details_action.triggered.connect(self.view_order_details)
    
    # –î–æ–±–∞–≤–∏—Ç—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
    # context_menu.addAction(details_action)
    
    return details_action

# 5. –î–û–ë–ê–í–ò–¢–¨ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞:
def setup_table_double_click(self):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π"""
    self.orders_table.doubleClicked.connect(self.view_order_details)

# 6. –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã:
def view_order_details_enhanced(self):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞"""
    current_row = self.orders_table.currentRow()
    if current_row < 0:
        QMessageBox.information(self, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
        return
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å ID –∑–∞–∫–∞–∑–∞
        order_id = None
        
        # –í–∞—Ä–∏–∞–Ω—Ç 1: ID –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ
        if self.orders_table.columnCount() > 0:
            id_item = self.orders_table.item(current_row, 0)
            if id_item and id_item.text().isdigit():
                order_id = int(id_item.text())
        
        # –í–∞—Ä–∏–∞–Ω—Ç 2: ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ UserRole –ª—é–±–æ–π —è—á–µ–π–∫–∏ —Å—Ç—Ä–æ–∫–∏
        if not order_id:
            for col in range(self.orders_table.columnCount()):
                item = self.orders_table.item(current_row, col)
                if item and item.data(Qt.UserRole):
                    try:
                        order_id = int(item.data(Qt.UserRole))
                        break
                    except (ValueError, TypeError):
                        continue
        
        # –í–∞—Ä–∏–∞–Ω—Ç 3: –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞
        if not order_id:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–æ–ª–æ–Ω–∫—É —Å –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞
            for col in range(self.orders_table.columnCount()):
                header_item = self.orders_table.horizontalHeaderItem(col)
                if header_item and "–Ω–æ–º–µ—Ä" in header_item.text().lower():
                    number_item = self.orders_table.item(current_row, col)
                    if number_item:
                        order_number = number_item.text()
                        # –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞ –ø–æ –Ω–æ–º–µ—Ä—É –≤ –ë–î
                        try:
                            from sqlalchemy import select
                            from sto_app.models_sto import Order
                            
                            stmt = select(Order.id).where(Order.order_number == order_number)
                            result = self.db_session.execute(stmt)
                            order_id = result.scalar_one_or_none()
                            break
                        except Exception as e:
                            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–∞ –ø–æ –Ω–æ–º–µ—Ä—É: {e}")
        
        if not order_id:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                              "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∑–∞–∫–∞–∑–∞.\n"
                              "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–∫–∞–∑ –≤—ã–±—Ä–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            return
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
        dialog = OrderDetailsDialog(self, order_id=order_id)
        dialog.exec()
        
    except Exception as e:
        self.logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞: {e}")
        QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: {e}")

# –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:
"""
1. –ù–∞–π—Ç–∏ –≤ orders_view.py –º–µ—Å—Ç–æ, –≥–¥–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
2. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–î–µ—Ç–∞–ª–∏" —Ä—è–¥–æ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
3. –ü–æ–¥–∫–ª—é—á–∏—Ç—å –º–µ—Ç–æ–¥ view_order_details_enhanced –∫ –∫–Ω–æ–ø–∫–µ
4. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –¥–æ–±–∞–≤–∏—Ç—å –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
5. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –∑–∞–∫–∞–∑–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è ID –∑–∞–∫–∞–∑–∞ (–≤ UserRole –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–ª–æ–Ω–∫–µ)
"""